clear 
N = 10^6; % number of bits or symbols 
rand('state',100); % initializing the rand() function 
randn('state',200); % initializing the randn() function 
% Transmitter 
ip = rand(1, N) > 0.5; % generating 0,1 with equal probability 
s = 2 * ip - 1; % BPSK modulation 0 -> -1; 1 -> 1 
n = 1 / sqrt(2) * (randn(1, N) + 1i * randn(1, N)); % white Gaussian noise, 0dB 
variance 
Eb_N0_dB = -3:10; % multiple Eb/N0 values 
for ii = 1:length(Eb_N0_dB) 
% Noise addition 
y = s + 10^(-Eb_N0_dB(ii)/20) * n; % additive white Gaussian noise 
% receiver - hard decision decoding 
ipHat = real(y) > 0; 
% counting the errors 
nErr(ii) = sum(ip ~= ipHat); % error counting 
end 
simBer = nErr / N; % simulated BER 
theoryBer = 0.5 * erfc(sqrt(10.^(Eb_N0_dB / 10))); % theoretical BER 
% Plotting 
close all 
figure 
semilogy(Eb_N0_dB, theoryBer, 'b.-'); % theoretical BER 
hold on 
semilogy(Eb_N0_dB, simBer, 'mx-'); % simulated BER 
axis([-3 10 10^-5 0.5]) 
grid on 
legend('Theory', 'Simulation'); 
xlabel('Eb/No, dB'); 
ylabel('Bit Error Rate'); 
title('Bit Error Probability Curve for BPSK Modulation');
